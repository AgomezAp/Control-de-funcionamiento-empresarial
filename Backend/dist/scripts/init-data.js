"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const connection_1 = __importDefault(require("../database/connection"));
const Role_1 = __importDefault(require("../models/Role"));
const Area_1 = __importDefault(require("../models/Area"));
const Categoria_1 = __importDefault(require("../models/Categoria"));
const Usuario_1 = __importDefault(require("../models/Usuario"));
const Cliente_1 = __importDefault(require("../models/Cliente"));
const Peticion_1 = __importDefault(require("../models/Peticion"));
require("../models/Relaciones"); // Importar relaciones
const bcrypt_1 = __importDefault(require("bcrypt"));
function initData() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            yield connection_1.default.authenticate();
            console.log("‚úÖ Conectado a la base de datos");
            // Sincronizar modelos
            yield connection_1.default.sync({ force: true }); // force: true para empezar desde cero
            console.log("‚úÖ Tablas sincronizadas");
            // Crear roles
            console.log("üìù Creando roles...");
            const roles = [
                { nombre: "Admin", descripcion: "Acceso total al sistema" },
                { nombre: "Directivo", descripcion: "Gesti√≥n de su √°rea" },
                { nombre: "L√≠der", descripcion: "Supervisi√≥n de equipo" },
                { nombre: "Usuario", descripcion: "Usuario est√°ndar" },
            ];
            const rolesCreados = {};
            for (const rol of roles) {
                const [roleCreado] = yield Role_1.default.findOrCreate({
                    where: { nombre: rol.nombre },
                    defaults: rol,
                });
                rolesCreados[rol.nombre] = roleCreado;
            }
            console.log("‚úÖ Roles creados");
            // Crear √°reas
            console.log("üìù Creando √°reas...");
            const areas = [
                { nombre: "Gesti√≥n Administrativa", descripcion: "√Årea administrativa" },
                { nombre: "Pautas", descripcion: "Gesti√≥n de pautas publicitarias" },
                { nombre: "Dise√±o", descripcion: "Dise√±o gr√°fico y web" },
                { nombre: "Contabilidad", descripcion: "Gesti√≥n contable" },
                { nombre: "Programaci√≥n", descripcion: "Desarrollo de software" },
            ];
            const areasCreadas = {};
            for (const area of areas) {
                const [areaCreada] = yield Area_1.default.findOrCreate({
                    where: { nombre: area.nombre },
                    defaults: area,
                });
                areasCreadas[area.nombre] = areaCreada;
            }
            console.log("‚úÖ √Åreas creadas");
            // Crear categor√≠as de Dise√±o
            console.log("üìù Creando categor√≠as de Dise√±o...");
            const categoriasDise√±o = [
                {
                    nombre: "Creaci√≥n de subpesta√±a",
                    area_tipo: "Dise√±o",
                    costo: 66000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Ajuste de copy",
                    area_tipo: "Dise√±o",
                    costo: 64000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Cambio de copy",
                    area_tipo: "Dise√±o",
                    costo: 128000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Fase 1 (color y tipograf√≠a)",
                    area_tipo: "Dise√±o",
                    costo: 104000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Fase 2 (diagramaci√≥n e im√°genes)",
                    area_tipo: "Dise√±o",
                    costo: 144000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Fase 3 (Redise√±o)",
                    area_tipo: "Dise√±o",
                    costo: 288000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Ajuste de dise√±o",
                    area_tipo: "Dise√±o",
                    costo: 80000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Migraci√≥n",
                    area_tipo: "Dise√±o",
                    costo: 64000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Creaci√≥n de sitio web",
                    area_tipo: "Dise√±o",
                    costo: 600000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Cambio de n√∫mero",
                    area_tipo: "Dise√±o",
                    costo: 10000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Cambio de nombre",
                    area_tipo: "Dise√±o",
                    costo: 85000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Modelado 3D",
                    area_tipo: "Dise√±o",
                    costo: 0,
                    es_variable: true,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Creaci√≥n de pieza publicitaria",
                    area_tipo: "Dise√±o",
                    costo: 30000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Ajuste de pieza publicitaria",
                    area_tipo: "Dise√±o",
                    costo: 15000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Copia de seguridad",
                    area_tipo: "Dise√±o",
                    costo: 20000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Barrido por dise√±o",
                    area_tipo: "Dise√±o",
                    costo: 15000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Limpieza de cach√©",
                    area_tipo: "Dise√±o",
                    costo: 5000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Descarga de im√°genes",
                    area_tipo: "Dise√±o",
                    costo: 32000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
            ];
            for (const cat of categoriasDise√±o) {
                yield Categoria_1.default.findOrCreate({
                    where: { nombre: cat.nombre },
                    defaults: cat,
                });
            }
            // Crear categor√≠as de Pautas
            console.log("üìù Creando categor√≠as de Pautas...");
            const categoriasPautas = [
                {
                    nombre: "Barrido web (revisi√≥n)",
                    area_tipo: "Pautas",
                    costo: 7000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Barrido Ads (revisi√≥n)",
                    area_tipo: "Pautas",
                    costo: 7000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Creaci√≥n de campa√±a",
                    area_tipo: "Pautas",
                    costo: 90000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Ajuste de campa√±a",
                    area_tipo: "Pautas",
                    costo: 36000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Palabras Clave (ajustes)",
                    area_tipo: "Pautas",
                    costo: 36000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Palabras clave (Barrido)",
                    area_tipo: "Pautas",
                    costo: 18000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Estrategias de seguimiento",
                    area_tipo: "Pautas",
                    costo: 72000,
                    es_variable: false,
                    requiere_descripcion_extra: true,
                },
                {
                    nombre: "Ajuste de presupuesto",
                    area_tipo: "Pautas",
                    costo: 72000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Creaci√≥n de anuncio",
                    area_tipo: "Pautas",
                    costo: 72000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Ajuste de anuncio",
                    area_tipo: "Pautas",
                    costo: 36000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Etiquetas de conversi√≥n",
                    area_tipo: "Pautas",
                    costo: 18000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Verificaci√≥n de anunciante",
                    area_tipo: "Pautas",
                    costo: 18000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
                {
                    nombre: "Apelaci√≥n",
                    area_tipo: "Pautas",
                    costo: 18000,
                    es_variable: false,
                    requiere_descripcion_extra: false,
                },
            ];
            for (const cat of categoriasPautas) {
                yield Categoria_1.default.findOrCreate({
                    where: { nombre: cat.nombre },
                    defaults: cat,
                });
            }
            console.log("‚úÖ Categor√≠as creadas");
            // Crear usuarios de prueba
            console.log("üìù Creando usuarios de prueba...");
            const passwordHash = yield bcrypt_1.default.hash("123456", 10);
            const usuarios = [
                {
                    nombre_completo: "Admin Principal",
                    correo: "admin@empresa.com",
                    contrasena: passwordHash,
                    rol_id: rolesCreados.Admin.id,
                    area_id: areasCreadas["Gesti√≥n Administrativa"].id,
                    status: true,
                },
                {
                    nombre_completo: "Juan P√©rez - Pautador",
                    correo: "juan.pautas@empresa.com",
                    contrasena: passwordHash,
                    rol_id: rolesCreados.Usuario.id,
                    area_id: areasCreadas.Pautas.id,
                    status: true,
                },
                {
                    nombre_completo: "Mar√≠a Garc√≠a - Pautadora",
                    correo: "maria.pautas@empresa.com",
                    contrasena: passwordHash,
                    rol_id: rolesCreados.Usuario.id,
                    area_id: areasCreadas.Pautas.id,
                    status: true,
                },
                {
                    nombre_completo: "Carlos L√≥pez - Dise√±ador",
                    correo: "carlos.diseno@empresa.com",
                    contrasena: passwordHash,
                    rol_id: rolesCreados.Usuario.id,
                    area_id: areasCreadas.Dise√±o.id,
                    status: true,
                },
                {
                    nombre_completo: "Ana Mart√≠nez - Dise√±adora",
                    correo: "ana.diseno@empresa.com",
                    contrasena: passwordHash,
                    rol_id: rolesCreados.Usuario.id,
                    area_id: areasCreadas.Dise√±o.id,
                    status: true,
                },
                {
                    nombre_completo: "Luis Rodr√≠guez - L√≠der Pautas",
                    correo: "luis.lider@empresa.com",
                    contrasena: passwordHash,
                    rol_id: rolesCreados.L√≠der.id,
                    area_id: areasCreadas.Pautas.id,
                    status: true,
                },
            ];
            const usuariosCreados = [];
            for (const usuario of usuarios) {
                const usuarioCreado = yield Usuario_1.default.create(usuario);
                usuariosCreados.push(usuarioCreado);
            }
            console.log("‚úÖ Usuarios creados");
            // Obtener usuarios espec√≠ficos para asignaci√≥n
            const pautador1 = usuariosCreados[1]; // Juan P√©rez
            const pautador2 = usuariosCreados[2]; // Mar√≠a Garc√≠a
            const disenador1 = usuariosCreados[3]; // Carlos L√≥pez
            const disenador2 = usuariosCreados[4]; // Ana Mart√≠nez
            const admin = usuariosCreados[0];
            // Crear clientes de prueba
            console.log("üìù Creando clientes de prueba...");
            const clientes = [
                {
                    nombre: "Empresa Tech Solutions",
                    pais: "Colombia",
                    tipo_cliente: "Meta Ads",
                    pautador_id: pautador1.uid,
                    disenador_id: disenador1.uid,
                    fecha_inicio: new Date("2024-01-15"),
                    status: true,
                },
                {
                    nombre: "Comercial El Progreso",
                    pais: "M√©xico",
                    tipo_cliente: "Google Ads",
                    pautador_id: pautador2.uid,
                    disenador_id: disenador2.uid,
                    fecha_inicio: new Date("2024-02-20"),
                    status: true,
                },
                {
                    nombre: "Restaurante La Buena Mesa",
                    pais: "Colombia",
                    tipo_cliente: "Meta Ads",
                    pautador_id: pautador1.uid,
                    disenador_id: disenador1.uid,
                    fecha_inicio: new Date("2024-03-10"),
                    status: true,
                },
                {
                    nombre: "Tienda Fashion Style",
                    pais: "Espa√±a",
                    tipo_cliente: "Google Ads",
                    pautador_id: pautador2.uid,
                    disenador_id: disenador2.uid,
                    fecha_inicio: new Date("2024-04-05"),
                    status: true,
                },
                {
                    nombre: "Consultora Legal Asociados",
                    pais: "Argentina",
                    tipo_cliente: "Externo",
                    pautador_id: pautador1.uid,
                    disenador_id: disenador1.uid,
                    fecha_inicio: new Date("2024-05-12"),
                    status: true,
                },
            ];
            const clientesCreados = [];
            for (const cliente of clientes) {
                const clienteCreado = yield Cliente_1.default.create(cliente);
                clientesCreados.push(clienteCreado);
            }
            console.log("‚úÖ Clientes creados");
            // Obtener categor√≠as para crear peticiones
            const categoriaPautas1 = yield Categoria_1.default.findOne({ where: { nombre: "Creaci√≥n de campa√±a" } });
            const categoriaPautas2 = yield Categoria_1.default.findOne({ where: { nombre: "Ajuste de campa√±a" } });
            const categoriaPautas3 = yield Categoria_1.default.findOne({ where: { nombre: "Barrido Ads (revisi√≥n)" } });
            const categoriaDise√±o1 = yield Categoria_1.default.findOne({ where: { nombre: "Creaci√≥n de pieza publicitaria" } });
            const categoriaDise√±o2 = yield Categoria_1.default.findOne({ where: { nombre: "Ajuste de dise√±o" } });
            const categoriaDise√±o3 = yield Categoria_1.default.findOne({ where: { nombre: "Fase 1 (color y tipograf√≠a)" } });
            // Crear peticiones de prueba
            console.log("üìù Creando peticiones de prueba...");
            const ahora = new Date();
            const hace2Horas = new Date(ahora.getTime() - 2 * 60 * 60 * 1000);
            const hace5Horas = new Date(ahora.getTime() - 5 * 60 * 60 * 1000);
            const ayer = new Date(ahora.getTime() - 24 * 60 * 60 * 1000);
            const peticiones = [
                // Peticiones de Pautas (auto-asignadas y en progreso)
                {
                    cliente_id: clientesCreados[0].id,
                    categoria_id: categoriaPautas1.id,
                    area: "Pautas",
                    descripcion: "Crear campa√±a de lanzamiento para nuevo producto de tecnolog√≠a",
                    costo: categoriaPautas1.costo,
                    estado: "En Progreso",
                    creador_id: admin.uid,
                    asignado_a: pautador1.uid,
                    fecha_aceptacion: hace5Horas,
                    tiempo_empleado_segundos: 18000, // 5 horas
                    temporizador_activo: true,
                    fecha_inicio_temporizador: hace5Horas,
                },
                {
                    cliente_id: clientesCreados[1].id,
                    categoria_id: categoriaPautas2.id,
                    area: "Pautas",
                    descripcion: "Ajustar campa√±a existente para mejorar CTR en anuncios de Google",
                    costo: categoriaPautas2.costo,
                    estado: "En Progreso",
                    creador_id: admin.uid,
                    asignado_a: pautador2.uid,
                    fecha_aceptacion: hace2Horas,
                    tiempo_empleado_segundos: 7200, // 2 horas
                    temporizador_activo: true,
                    fecha_inicio_temporizador: hace2Horas,
                },
                {
                    cliente_id: clientesCreados[2].id,
                    categoria_id: categoriaPautas3.id,
                    area: "Pautas",
                    descripcion: "Realizar barrido de anuncios para verificar rendimiento semanal",
                    costo: categoriaPautas3.costo,
                    estado: "Resuelta",
                    creador_id: admin.uid,
                    asignado_a: pautador1.uid,
                    fecha_aceptacion: ayer,
                    fecha_resolucion: new Date(ayer.getTime() + 1 * 60 * 60 * 1000),
                    tiempo_empleado_segundos: 3600, // 1 hora
                    temporizador_activo: false,
                },
                // Peticiones de Dise√±o (pendientes y en progreso)
                {
                    cliente_id: clientesCreados[0].id,
                    categoria_id: categoriaDise√±o1.id,
                    area: "Dise√±o",
                    descripcion: "Dise√±ar pieza publicitaria para campa√±a de redes sociales - Incluir logo y colores corporativos",
                    costo: categoriaDise√±o1.costo,
                    estado: "Pendiente",
                    creador_id: admin.uid,
                    tiempo_empleado_segundos: 0,
                    temporizador_activo: false,
                },
                {
                    cliente_id: clientesCreados[3].id,
                    categoria_id: categoriaDise√±o2.id,
                    area: "Dise√±o",
                    descripcion: "Ajustar dise√±o de landing page seg√∫n feedback del cliente - Cambiar paleta de colores",
                    costo: categoriaDise√±o2.costo,
                    estado: "En Progreso",
                    creador_id: admin.uid,
                    asignado_a: disenador2.uid,
                    fecha_aceptacion: hace2Horas,
                    tiempo_empleado_segundos: 7200, // 2 horas
                    temporizador_activo: true,
                    fecha_inicio_temporizador: hace2Horas,
                },
                {
                    cliente_id: clientesCreados[4].id,
                    categoria_id: categoriaDise√±o3.id,
                    area: "Dise√±o",
                    descripcion: "Desarrollar identidad visual para consultora legal - Primera fase con colores y tipograf√≠a",
                    costo: categoriaDise√±o3.costo,
                    estado: "Pendiente",
                    creador_id: admin.uid,
                    tiempo_empleado_segundos: 0,
                    temporizador_activo: false,
                },
                {
                    cliente_id: clientesCreados[1].id,
                    categoria_id: categoriaDise√±o1.id,
                    area: "Dise√±o",
                    descripcion: "Crear banners para promoci√≥n de temporada - 3 tama√±os diferentes",
                    costo: categoriaDise√±o1.costo,
                    estado: "Resuelta",
                    creador_id: admin.uid,
                    asignado_a: disenador1.uid,
                    fecha_aceptacion: ayer,
                    fecha_resolucion: new Date(ayer.getTime() + 4 * 60 * 60 * 1000),
                    tiempo_empleado_segundos: 14400, // 4 horas
                    temporizador_activo: false,
                },
                {
                    cliente_id: clientesCreados[2].id,
                    categoria_id: categoriaPautas1.id,
                    area: "Pautas",
                    descripcion: "Configurar nueva campa√±a para restaurante con segmentaci√≥n por ubicaci√≥n geogr√°fica",
                    costo: categoriaPautas1.costo,
                    estado: "Resuelta",
                    creador_id: admin.uid,
                    asignado_a: pautador1.uid,
                    fecha_aceptacion: new Date(ahora.getTime() - 3 * 24 * 60 * 60 * 1000),
                    fecha_resolucion: new Date(ahora.getTime() - 3 * 24 * 60 * 60 * 1000 + 6 * 60 * 60 * 1000),
                    tiempo_empleado_segundos: 21600, // 6 horas
                    temporizador_activo: false,
                },
            ];
            for (const peticion of peticiones) {
                yield Peticion_1.default.create(peticion);
            }
            console.log("‚úÖ Peticiones creadas");
            console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
            console.log("‚úÖ Datos iniciales cargados correctamente");
            console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
            console.log("");
            console.log("üìä Resumen:");
            console.log(`   - ${roles.length} Roles`);
            console.log(`   - ${areas.length} √Åreas`);
            console.log(`   - ${categoriasDise√±o.length} Categor√≠as de Dise√±o`);
            console.log(`   - ${categoriasPautas.length} Categor√≠as de Pautas`);
            console.log(`   - ${usuarios.length} Usuarios`);
            console.log(`   - ${clientes.length} Clientes`);
            console.log(`   - ${peticiones.length} Peticiones`);
            console.log("");
            console.log("üë• Usuarios creados:");
            console.log("   üìß admin@empresa.com (Admin) - Password: 123456");
            console.log("   üìß juan.pautas@empresa.com (Pautador) - Password: 123456");
            console.log("   üìß maria.pautas@empresa.com (Pautadora) - Password: 123456");
            console.log("   üìß carlos.diseno@empresa.com (Dise√±ador) - Password: 123456");
            console.log("   üìß ana.diseno@empresa.com (Dise√±adora) - Password: 123456");
            console.log("   üìß luis.lider@empresa.com (L√≠der) - Password: 123456");
            console.log("");
            console.log("üéâ ¬°Listo! Ya puedes empezar a usar la aplicaci√≥n");
            process.exit(0);
        }
        catch (error) {
            console.error("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
            console.error("‚ùå Error al inicializar datos:");
            console.error(error);
            console.error("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
            process.exit(1);
        }
    });
}
// Ejecutar funci√≥n
initData();
